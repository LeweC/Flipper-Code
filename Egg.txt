+----------------------------------------------------------------------+
| PHASE I 	HOME                                                       |
| PHASE II 	IN POSITION                                                |
| PHASE III GRAB	                                                   |
| PHASE IV	RELEASE                                                    |
+----------------------------------------------------------------------+

+----------------------------------------------------------------------+
|	Setup                                                              |
|	XL430 		--> flex/extend fingers                                |
|	XL330 ID 1	--> flex/extend thumb                                  |
|	XL330 ID 2	--> rotate fingers                                     |
+----------------------------------------------------------------------+

#INIT
	do
		2 -->xNUM
		1 FINGER_ROTATE_ID -->xENABLE
		1 THUMB_ID -->xENABLE
		1 -->ENABLE
		RememberOldAngles
		UpdateValues!
		0 -->REDLED
;

+----------------------------------------------------------------------+
| PHASE I HOME                                                         |
+vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv+

#HOME_ROTATE_FINGERS
	after 
		INIT
	do 
		RotateFingers
	until 
		STOP_REACHED_RF
;

#HOME_EXTEND_THUMB	after	    HOME_ROTATE_FINGERS
	do 
		StopRotateFingers
		ExtendThumb
	until 
		STOP_REACHED_ET
;

#HOME_EXTEND_FINGERS
	after 
		HOME_EXTEND_THUMB
	do 
		StopExtendThumb
		ExtendFingers
	until 
		STOP_REACHED_EF
;

#READY
	after
		HOME_EXTEND_FINGERS
	do
		StopExtendFingers
;

+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^+
| PHASE I HOME                                                         |
+----------------------------------------------------------------------+

+----------------------------------------------------------------------+
| PHASE II IN POSITION                                                 |
|  0 RotatePosition Fingers and Thumb are orthogonal                   |
| 90 RotatePosition Fingers and Thumb are parallel                     |
+vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv+

#FINGER_IN_POSITION
	after
		READY
	do
		0 RotatePosition
		30 FlexPosition
;

+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^+
| PHASE II IN POSITION                                                 |
+----------------------------------------------------------------------+

+----------------------------------------------------------------------+
| PHASE III GRAB	                                                   |
+vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv+
#GRAB
;

+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^+
| PHASE III GRAB                                                       |
+----------------------------------------------------------------------+

+----------------------------------------------------------------------+
| TODO: Refactor                                                       |
+----------------------------------------------------------------------+
:UpdateValues
	oldAngleFR FINGER_ROTATE_ID xxANGLE - -->diffAngleFR
	lapRF diffAngleFR 1000 > + -->lapRF
	lapRF diffAngleFR -1000 < - -->lapRF
	lapRF 4095 * FINGER_ROTATE_ID xxANGLE + -->totalAngleFR
	
	oldAngleT THUMB_ID xxANGLE - -->diffAngleT
	lapT diffAngleT 1000 > + -->lapT
	lapT diffAngleT -1000 < - -->lapT
	lapT 4095 * THUMB_ID xxANGLE + -->totalAngleT
	
	oldAngleFF FINGER_FLEX_ID xxANGLE - -->diffAngleFF
	lapFF diffAngle 1000 > + -->lapFF
	lapFF diffAngle -1000 < - -->lapFF
	lapFF 4095 * FINGER_FLEX_ID xxANGLE + -->totalAngleFF
	
	RememberOldAngles
	
	FINGER_IN_POSITION -->REDLED
;

:RememberOldAngles
	FINGER_ROTATE_ID xxANGLE -->oldAngleFR
	THUMB_ID xxANGLE -->oldAngleT
	FINGER_FLEX_ID xxANGLE -->oldAngleFF
;

+----------------------------------------------------------------------+
| TODO: Combine functions                                              |
+----------------------------------------------------------------------+
:RotateFingers
	1 -->motorDirection 
	75 -->motorSpeed
	motorDirection motorSpeed * 2 -->xMOTOR
;

:StopRotateFingers
	0 FINGER_ROTATE_ID -->xMOTOR
;

:ExtendThumb
	75 THUMB_ID -->xMOTOR
;

:StopExtendThumb
	0 THUMB_ID -->xMOTOR
;

:ExtendFingers
	100 -->MOTOR
;

:StopExtendFingers
	0 -->MOTOR
;

+----------------------------------------------------------------------+
| HACK: counter is hacky, but this comment is too small to contain an  |
|       explanation                                                    |
+----------------------------------------------------------------------+
:STOP_REACHED_RF
	counter 1 + -->counter 
	FINGER_ROTATE_ID xxVELOCITY abs 0.01 < counter 10 > *
;

+----------------------------------------------------------------------+
| TODO: filter values?                                                 |
+----------------------------------------------------------------------+
:STOP_REACHED_ET
	counter2 1 + -->counter2 
	37 -->threshold
	THUMB_ID xxVELOCITY abs threshold < counter2 10 > *
;

:STOP_REACHED_EF
	counter3 1 + -->counter3 
	2 -->threshold
	VELOCITY abs threshold < counter3 10 > *
;

+----------------------------------------------------------------------+
| TODO: Implement                                                      |
+----------------------------------------------------------------------+				
:RotatePosition
	FINGER_ROTATE_ID xxToMotorAngle -->targetAngle
	100 motorDirection * -1 * 2 -->xMOTOR
;	

+----------------------------------------------------------------------+
| use xxMOTOR, xxVELOCITY etc. for finger flexion => requires no ID    |
+----------------------------------------------------------------------+
:FINGER_FLEX_ID 0 ;
:THUMB_ID 1 ;
:FINGER_ROTATE_ID 2 ;		
				
+----------------------------------------------------------------------+
| Helper Functions                                                     |
+vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv+			
				
:if -->f f not * swap f * + ;		
		     
:not 0 = ;

:DegreeToBit
	0.002779 * 4095 *
;

:BitToDegree
	0.000246548 * 360 *
;

:xxTOTAL_ANGLE
	-->id
	lapFF id FINGER_FLEX_ID = *
	lapT id THUMB_ID = * +
	lapRF id FINGER_ROTATE_ID = * +
	4096 * 
	id xxANGLE +
;

+----------------------------------------------------------------------+
| xCurrent only works for XL330 anyway -> no wrapper                   |
+----------------------------------------------------------------------+
:xxANGLE -->id2 ANGLE id2 xANGLE id2 0 = if ;
:xxVELOCITY -->id4 VELOCITY id4 xVELOCITY id4 0 = if ;
:xxMOTOR -->id5 MOTOR id5 xMOTOR id5 0 = if ;
:SetxxMOTOR
	-->id6
	-->u
	u MOTOR id6 0 = if -->MOTOR
	u xMOTOR id6 0 > if id6 -->xMOTOR
;

+----------------------------------------------------------------------+
| TODO: Find values                                                    |
+----------------------------------------------------------------------+
:xxToMotorAngle
	-->id3
	-->phi
	phi 1 + 2 * id3 FINGER_FLEX_ID = *
	phi 1 + 2 * id3 THUMB_ID = * +
	phi 1 + 2 * id3 FINGER_ROTATE_ID = * +
; 

+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^+
| Helper Functions                                                     |
+----------------------------------------------------------------------+
