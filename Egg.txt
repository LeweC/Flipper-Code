+----------------------------------------------------------------------+
| PHASE I 	HOME                                                       |
| PHASE II 	IN POSITION                                                |
| PHASE III GRAB	                                                   |
| PHASE IV	RELEASE                                                    |
+----------------------------------------------------------------------+

+----------------------------------------------------------------------+
|	Setup                                                              |
|	XL430 		--> flex/extend fingers                                |
|	XL330 ID 1	--> flex/extend thumb                                  |
|	XL330 ID 2	--> rotate fingers                                     |
+----------------------------------------------------------------------+

#INIT
	do
		2 -->xNUM
		1 FINGER_ROTATE_ID -->xENABLE
		1 THUMB_ID -->xENABLE
		1 -->ENABLE
		RememberOldAngles
		UpdateValues!
		0 -->REDLED
;

+----------------------------------------------------------------------+
| PHASE I HOME                                                         |
+vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv+

#HOME_ROTATE_FINGERS
	after 
		INIT
	do 
		RotateFingers
	until 
		STOP_REACHED_RF
;

#HOME_EXTEND_THUMB	after	    HOME_ROTATE_FINGERS
	do 
		StopRotateFingers
		ExtendThumb
	until 
		STOP_REACHED_ET
;

#HOME_EXTEND_FINGERS
	after 
		HOME_EXTEND_THUMB
	do 
		StopExtendThumb
		ExtendFingers
	until 
		STOP_REACHED_EF
;

#READY
	after
		HOME_EXTEND_FINGERS
	do
		StopExtendFingers
;

+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^+
| PHASE I HOME                                                         |
+----------------------------------------------------------------------+

+----------------------------------------------------------------------+
| PHASE II IN POSITION                                                 |
|  0 RotatePosition Fingers and Thumb are parallel                     |
| 90 RotatePosition Fingers and Thumb are orthogonal                   |
+vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv+

#FINGER_IN_POSITION
	after
		READY
;
	do
		1000 RotatePosition
		FlexPosition

+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^+
| PHASE II IN POSITION                                                 |
+----------------------------------------------------------------------+

+----------------------------------------------------------------------+
| PHASE III GRAB	                                                   |
+vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv+
#GRAB
;

+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^+
| PHASE III GRAB                                                       |
+----------------------------------------------------------------------+

+----------------------------------------------------------------------+
| TODO: Refactor                                                       |
+----------------------------------------------------------------------+
:UpdateValues
	oldAngleRF 2 xANGLE - -->diffAngleRF
	lapRF diffAngleRF 1000 > + -->lapRF
	lapRF diffAngleRF -1000 < - -->lapRF
	lapRF 4095 * 2 xANGLE + -->totalAngleRF
	
	oldAngleET 1 xANGLE - -->diffAngleET
	lapET diffAngleET 1000 > + -->lapET
	lapET diffAngleET -1000 < - -->lapET
	lapET 4095 * 1 xANGLE + -->totalAngleET
	
	oldAngleEF ANGLE - -->diffAngleEF
	lapEF diffAngle 1000 > + -->lapEF
	lapEF diffAngle -1000 < - -->lapEF
	lapEF 4095 * ANGLE + -->totalAngleEF
	
	RememberOldAngles
	
	FINGER_IN_POSITION -->REDLED
;
:RememberOldAngles
	2 xANGLE -->oldAngleRF
	1 xANGLE -->oldAngleET
	ANGLE -->oldAngleEF
;

:RotateFingers
	1 -->motorDirection 
	75 -->motorSpeed
	motorDirection motorSpeed * 2 -->xMOTOR
;

:StopRotateFingers
	0 FINGER_ROTATE_ID -->xMOTOR
;

:ExtendThumb
	75 THUMB_ID -->xMOTOR
;

:StopExtendThumb
	0 THUMB_ID -->xMOTOR
;

:ExtendFingers
	100 -->MOTOR
;

:StopExtendFingers
	0 -->MOTOR
;

+----------------------------------------------------------------------+
| HACK: counter is hacky, but this comment is too small to contain an  |
|       explanation                                                    |
+----------------------------------------------------------------------+
:STOP_REACHED_RF
	counter 1 + -->counter 
	FINGER_ROTATE_ID xVELOCITY abs 0.01 < counter 10 > *
;

+----------------------------------------------------------------------+
| TODO: filter values?                                                 |
+----------------------------------------------------------------------+
:STOP_REACHED_ET
	counter2 1 + -->counter2 
	37 -->threshold
	THUMB_ID xVELOCITY abs threshold < counter2 10 > *
;

:STOP_REACHED_EF
	counter3 1 + -->counter3 
	2 -->threshold
	VELOCITY abs threshold < counter3 10 > *
;

+----------------------------------------------------------------------+
| TODO: Implement                                                      |
+----------------------------------------------------------------------+				
:RotatePosition
	FingerToMotorAngle -->targetAngle
	100 motorDirection * -1 * 2 -->xMOTOR
;	

:THUMB_ID 1 ;
:FINGER_ROTATE_ID 2 ;	
( use MOTOR, VELOCITY etc. for finger flexion => requires no ID )		
				
+----------------------------------------------------------------------+
| Helper Functions                                                     |
+vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv+			
				
:if -->f f not * swap f * + ;		
		     
:not 0 = ;

:DegreeToBit
	0.002779 * 4095 *
;

:BitToDegree
	0.000246548 * 360 *
;

:TOTAL_ANGLE_FR
	4096 lap * 2 xANGLE + 
;

:TOTAL_ANGLE_TF
	4096 lap * 1 xANGLE + 
;

:TOTAL_ANGLE_FF
	4096 lap * ANGLE + 
;

:FingerToMotorAngle
	1 + 2 * 
; 

+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^+
| Helper Functions                                                     |
+----------------------------------------------------------------------+
